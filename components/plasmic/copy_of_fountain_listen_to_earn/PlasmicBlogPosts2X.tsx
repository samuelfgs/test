// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6BobAUw5T3TCqT8ypcszbG
// Component: HZvDMx7WOR3PO
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: KhbeBVaAisx47/component

import { useScreenVariants as useScreenVariantsuXvTXvy0VuZNuyJ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: UXvTXvy0VuZNuyJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fountain_fm_css from "../fountain_fm/plasmic_fountain_fm.module.css"; // plasmic-import: q7mc6yKyK23FBh7x1aGwnG/projectcss
import projectcss from "./plasmic_copy_of_fountain_listen_to_earn.module.css"; // plasmic-import: 6BobAUw5T3TCqT8ypcszbG/projectcss
import sty from "./PlasmicBlogPosts2X.module.css"; // plasmic-import: HZvDMx7WOR3PO/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: S2Divheo_3CFcy/icon

export type PlasmicBlogPosts2X__VariantMembers = {};

export type PlasmicBlogPosts2X__VariantsArgs = {};
type VariantPropType = keyof PlasmicBlogPosts2X__VariantsArgs;
export const PlasmicBlogPosts2X__VariantProps = new Array<VariantPropType>();

export type PlasmicBlogPosts2X__ArgsType = {};
type ArgPropType = keyof PlasmicBlogPosts2X__ArgsType;
export const PlasmicBlogPosts2X__ArgProps = new Array<ArgPropType>();

export type PlasmicBlogPosts2X__OverridesType = {
  root?: p.Flex<"div">;
};

export interface DefaultBlogPosts2XProps {
  className?: string;
}

export const defaultBlogPosts2X__Args: Partial<PlasmicBlogPosts2X__ArgsType> =
  {};

function PlasmicBlogPosts2X__RenderFunc(props: {
  variants: PlasmicBlogPosts2X__VariantsArgs;
  args: PlasmicBlogPosts2X__ArgsType;
  overrides: PlasmicBlogPosts2X__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultBlogPosts2X__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsuXvTXvy0VuZNuyJ()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_fountain_fm_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.column__biTf)}>
        <div className={classNames(projectcss.all, sty.columns__vXO)}>
          <div className={classNames(projectcss.all, sty.column__dlJnh)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___4SAod)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column__yAKrS)}>
            <div className={classNames(projectcss.all, sty.freeBox__gSgR7)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___0KVco
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Editorial"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__spFp
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Activating cross-app Lightning Comments for your podcast"
                  : "Activating cross-app Lightning Comments for your podcast"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__edlKk
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__dMa0C)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className={classNames(projectcss.all, sty.column__bYrs5)}>
        <div className={classNames(projectcss.all, sty.columns___9K6Vb)}>
          <div className={classNames(projectcss.all, sty.column__mzxuD)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__amXuL)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column___6Prel)}>
            <div className={classNames(projectcss.all, sty.freeBox__pSKH)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7QEI
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Editorial"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4___2YuUn
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "How to send your first Lightning Comment"
                  : "How to send your first Lightning Comment"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__r2FZp
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__wVnfF)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className={classNames(projectcss.all, sty.column__sL5Pl)}>
        <div className={classNames(projectcss.all, sty.columns__vfSdE)}>
          <div className={classNames(projectcss.all, sty.column__q79KT)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__bjcla)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column__cG4Y)}>
            <div className={classNames(projectcss.all, sty.freeBox__qxtp)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hcgkA
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Editorial"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__uuZp6
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Fountain 0.3.10 - Lightning Comments, Player/Podcasts UI, Person Tag & Transcription"
                  : "Fountain 0.3.10 - Lightning Comments, Player/Podcasts UI, Person Tag & Transcription"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gQmv0
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__oObMv)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className={classNames(projectcss.all, sty.column__fIkc)}>
        <div className={classNames(projectcss.all, sty.columns__gO2NY)}>
          <div className={classNames(projectcss.all, sty.column__qGa9K)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__iWd2P)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column__exIwv)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__x3WHk
              )}
            >
              <React.Fragment>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"Editorial"}
                </span>
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>

            <div className={classNames(projectcss.all, sty.freeBox__mcnRl)}>
              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__hunFt
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Ten eclectic podcasts that listeners on Fountain love"
                  : "Ten eclectic podcasts that listeners on Fountain love"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yIuLw
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__wm72S)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className={classNames(projectcss.all, sty.column__bI7EG)}>
        <div className={classNames(projectcss.all, sty.columns___8HGsa)}>
          <div className={classNames(projectcss.all, sty.column__koZ)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__of6Xz)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column__bjkVh)}>
            <div className={classNames(projectcss.all, sty.freeBox__ly91W)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zBncc
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Editorial"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4___5ZIhM
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "How to manage splits for your shows and episodes"
                  : "How to manage splits for your shows and episodes"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ulbrh
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__ziIuT)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className={classNames(projectcss.all, sty.column__sGUmd)}>
        <div className={classNames(projectcss.all, sty.columns___0Wu7U)}>
          <div className={classNames(projectcss.all, sty.column__aermn)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__qR3A)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column__y27ZS)}>
            <div className={classNames(projectcss.all, sty.freeBox__int4D)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___831Ns
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Editorial"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__bfGWc
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "How to claim your Podcaster Wallet on the Fountain app"
                  : "How to claim your Podcaster Wallet on the Fountain app"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dJjfO
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button___1F98B)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className={classNames(projectcss.all, sty.column___0Gwuf)}>
        <div className={classNames(projectcss.all, sty.columns__kXuha)}>
          <div className={classNames(projectcss.all, sty.column__nJcEd)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__hrpc)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column___70HkE)}>
            <div className={classNames(projectcss.all, sty.freeBox__jA2Vm)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jExm4
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Editorial"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4__w9E9Y
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Fountain 0.3.7 - Podcaster Wallet & Improved Search"
                  : "Fountain 0.3.7 - Podcaster Wallet & Improved Search"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kp1JX
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__eL6P5)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>

      <div className={classNames(projectcss.all, sty.column__kb3U)}>
        <div className={classNames(projectcss.all, sty.columns__zq8Qd)}>
          <div className={classNames(projectcss.all, sty.column___1VmfB)}>
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__zjFaT)}
              displayHeight={"100%" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"100%" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/copy_of_fountain_listen_to_earn/images/screenshot20220323At164606Png3.png",
                fullWidth: 3024,
                fullHeight: 1697,
                aspectRatio: undefined
              }}
            />
          </div>

          <div className={classNames(projectcss.all, sty.column__h6UnP)}>
            <div className={classNames(projectcss.all, sty.freeBox__gQw8H)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9Tsbo
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"Editorial"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>

              <h4
                className={classNames(
                  projectcss.all,
                  projectcss.h4,
                  projectcss.__wab_text,
                  sty.h4___39GH0
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Bitcoin Lightning and podcasting is taking off"
                  : "Bitcoin Lightning and podcasting is taking off"}
              </h4>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___39Pl5
                )}
              >
                {
                  "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor ..."
                }
              </div>

              <Button
                className={classNames("__wab_instance", sty.button__xepwi)}
                shape={"rounded" as const}
                showEndIcon={true}
              >
                {"Read post"}
              </Button>
            </div>
          </div>
        </div>
      </div>
    </p.Stack>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBlogPosts2X__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBlogPosts2X__VariantsArgs;
    args?: PlasmicBlogPosts2X__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBlogPosts2X__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBlogPosts2X__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicBlogPosts2X__ArgProps,
      internalVariantPropNames: PlasmicBlogPosts2X__VariantProps
    });

    return PlasmicBlogPosts2X__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBlogPosts2X";
  } else {
    func.displayName = `PlasmicBlogPosts2X.${nodeName}`;
  }
  return func;
}

export const PlasmicBlogPosts2X = Object.assign(
  // Top-level PlasmicBlogPosts2X renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicBlogPosts2X
    internalVariantProps: PlasmicBlogPosts2X__VariantProps,
    internalArgProps: PlasmicBlogPosts2X__ArgProps
  }
);

export default PlasmicBlogPosts2X;
/* prettier-ignore-end */
