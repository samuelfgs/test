// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6BobAUw5T3TCqT8ypcszbG
// Component: QCD7u1KpphPcZN
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: KhbeBVaAisx47/component
import RecentPosts from "../../RecentPosts"; // plasmic-import: ES5fdpvJSG9xVp/component
import Footer from "../../Footer"; // plasmic-import: nmBaA0odzpiNWE/component

import { useScreenVariants as useScreenVariantsuXvTXvy0VuZNuyJ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: UXvTXvy0VuZNuyJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fountain_fm_css from "../fountain_fm/plasmic_fountain_fm.module.css"; // plasmic-import: q7mc6yKyK23FBh7x1aGwnG/projectcss
import projectcss from "./plasmic_copy_of_fountain_listen_to_earn.module.css"; // plasmic-import: 6BobAUw5T3TCqT8ypcszbG/projectcss
import sty from "./PlasmicBlogArticleExample.module.css"; // plasmic-import: QCD7u1KpphPcZN/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: S2Divheo_3CFcy/icon

export type PlasmicBlogArticleExample__VariantMembers = {};

export type PlasmicBlogArticleExample__VariantsArgs = {};
type VariantPropType = keyof PlasmicBlogArticleExample__VariantsArgs;
export const PlasmicBlogArticleExample__VariantProps =
  new Array<VariantPropType>();

export type PlasmicBlogArticleExample__ArgsType = {};
type ArgPropType = keyof PlasmicBlogArticleExample__ArgsType;
export const PlasmicBlogArticleExample__ArgProps = new Array<ArgPropType>();

export type PlasmicBlogArticleExample__OverridesType = {
  root?: p.Flex<"div">;
  h2?: p.Flex<"h2">;
  button?: p.Flex<typeof Button>;
  recentPosts?: p.Flex<typeof RecentPosts>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultBlogArticleExampleProps {}

export const defaultBlogArticleExample__Args: Partial<PlasmicBlogArticleExample__ArgsType> =
  {};

function PlasmicBlogArticleExample__RenderFunc(props: {
  variants: PlasmicBlogArticleExample__VariantsArgs;
  args: PlasmicBlogArticleExample__ArgsType;
  overrides: PlasmicBlogArticleExample__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultBlogArticleExample__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsuXvTXvy0VuZNuyJ()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_fountain_fm_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__xKlqa)}>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox__miYr)}>
                <p.PlasmicLink
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__zF2
                  )}
                  component={Link}
                  platform={"nextjs"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Unsr
                    )}
                  >
                    {"< Blog"}
                  </div>
                </p.PlasmicLink>

                <div className={classNames(projectcss.all, sty.freeBox__jcH1)}>
                  <h2
                    data-plasmic-name={"h2"}
                    data-plasmic-override={overrides.h2}
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2
                    )}
                  >
                    {"Fountain: the podcast app where you get paid to listen"}
                  </h2>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__arGwj
                    )}
                  >
                    {"May 18, 2022"}
                  </h6>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4___3NFUi
                    )}
                  >
                    {
                      "Podcast app Fountain announced today that you can now earn simply by listening your favourite podcasts. "
                    }
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__jil9V
                    )}
                  >
                    {"Fountain CEO Oscar Merry commented:"}
                  </h6>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__in0Zs
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <blockquote
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.blockquote__vgZj
                        )}
                      >
                        {
                          "“The time and attention we give to tech platforms is incredibly valuable. Every minute that you spend consuming content, creating content, or viewing ads, increases the value of the platform you’re using. Most free apps we use every day don’t recognise or reward this - but Fountain is different. It’s the only podcast app that rewards both listeners and podcasters for the value that they bring to the platform”"
                        }
                      </blockquote>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h6>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__xrr4
                    )}
                  >
                    {"What you can do on Fountain"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__bfNi6
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__moezJ
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___0IpG
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"Get paid to listen"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700 }}
                            >
                              {":"}
                            </span>
                            <React.Fragment>
                              {
                                " Earn every day simply by listening to your favourite podcasts. Earn extra by creating clips and listening to daily promotions."
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__buDs5
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"Support your favourite shows"}
                            </span>
                            <React.Fragment>
                              {
                                ": Give back to podcasts you love by paying the hosts, guests and contributors - directly as you listen."
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </li>
                      </ul>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h6>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__ipTuR
                    )}
                  >
                    {"Why this is worth paying attention to"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__lbf2P
                    )}
                  >
                    {
                      "The podcast app marketplace is dominated by two major players. Apple Podcasts is the default app installed on over a billion iPhone devices and Spotify are investing heavily into intellectual property to support their premium subscription. Before Fountain, no other podcast app offered a compelling reason for listeners to switch from using these apps."
                    }
                  </h6>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6___4958
                    )}
                  >
                    {"Fountain investor Anthony Pompliano commented:"}
                  </h6>

                  <blockquote
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.blockquote__cDEuJ
                    )}
                  >
                    {
                      "“The team at Fountain is pioneering a new category, Listen to Earn, which will allow anyone in the world with an internet connection the opportunity to earn monetary value for listening to their favorite podcasts. Rather than creating a worthless native token to pay individual users with, Fountain has intelligently decided to use bitcoin, a global digital currency that has proven to hold purchasing power more effectively than any fiat currency over long time periods. The time and attention of users is highly valuable, so it is powerful to see Fountain become the first podcast app to fairly compensate those users for the value they bring”"
                    }
                  </blockquote>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__wc2Sb
                    )}
                  >
                    {"Better podcast advertising with Fountain Promotions"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__zYgVg
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "Fountain Promotions are native ads that allow listeners to earn extra money every day. Getting paid to listen to ads is a more rewarding experience for users but it also solves two common yet unreported headaches for podcast advertisers.\n\n"
                        }
                      </React.Fragment>
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul___11UqB
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___46TMo
                          )}
                        >
                          {
                            "If the episode your ad is placed in is downloaded, it might not be played."
                          }
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__sqYct
                          )}
                        >
                          {
                            "If the episode is played, listeners can easily skip your ad."
                          }
                        </li>
                      </ul>
                      <React.Fragment>
                        {
                          "\nBoth of these cases are still counted as downloads in your reach metrics. In other words, your ad is not reaching users but you’re still paying.\n\nFountain Promotions are un-skippable and a portion of the advertising budget gets paid back to the user for every second they spend listening. Fountain Promotions are voluntary and do not interrupt your podcast listening experience. Podcasters who want to get their content in front of listeners can promote an episode or clip within the app once they have claimed their [Fountain Podcaster Wallet](https://fountain.fm/podcaster-wallet)."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </h6>

                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__e0Jf9
                    )}
                  >
                    {"A more rewarding podcast experience for everyone"}
                  </h4>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__knRk9
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <ul
                        className={classNames(
                          projectcss.all,
                          projectcss.ul,
                          sty.ul__ykQnt
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__tkNEm
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"For Listeners"}
                            </span>
                            <React.Fragment>
                              {
                                ": Earn money for something you do every day - listening to podcasts"
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__v76E
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"For Podcasters"}
                            </span>
                            <React.Fragment>
                              {
                                ": Grow your reach and turn your biggest fans into paying supporters"
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </li>

                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__kZaSb
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecorationLine: "underline" }}
                            >
                              {"For Advertisers"}
                            </span>
                            <React.Fragment>
                              {
                                ": Stop paying for podcast advertising that nobody hears"
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </li>
                      </ul>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h6>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__hfYvy
                    )}
                  >
                    {"Fountain Podcasts is available now on iOS and Android.\n"}
                  </h6>

                  <h6
                    className={classNames(
                      projectcss.all,
                      projectcss.h6,
                      projectcss.__wab_text,
                      sty.h6__lAiD0
                    )}
                  >
                    {"A button:"}
                  </h6>

                  <Button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__mieZs
                      )}
                    >
                      {"Button"}
                    </div>
                  </Button>

                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : false
                  ) ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rFlwc
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700, color: "#000000" }}
                          >
                            {"Next >"}
                          </span>
                          <React.Fragment>{"\n"}</React.Fragment>
                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.link___88EqZ
                            )}
                            component={Link}
                            href={
                              "What is The Bitcoin Lightning Network?" as const
                            }
                            platform={"nextjs"}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000" }}
                              >
                                {"What is The Bitcoin Lightning Network?"}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </p.PlasmicLink>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      ) : (
                        <React.Fragment>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700, color: "#000000" }}
                          >
                            {"Next >"}
                          </span>
                          <React.Fragment>{"\n"}</React.Fragment>
                          <p.PlasmicLink
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              projectcss.plasmic_default__inline,
                              sty.link__rsixU
                            )}
                            component={Link}
                            href={
                              "What is The Bitcoin Lightning Network?" as const
                            }
                            platform={"nextjs"}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000" }}
                              >
                                {"What is The Bitcoin Lightning Network?"}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </p.PlasmicLink>
                          <React.Fragment>{""}</React.Fragment>
                        </React.Fragment>
                      )}
                    </div>
                  ) : null}
                </div>
              </div>
            ) : null}
          </div>

          <RecentPosts
            data-plasmic-name={"recentPosts"}
            data-plasmic-override={overrides.recentPosts}
            className={classNames("__wab_instance", sty.recentPosts)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "h2", "button", "recentPosts", "footer"],
  h2: ["h2"],
  button: ["button"],
  recentPosts: ["recentPosts"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  h2: "h2";
  button: typeof Button;
  recentPosts: typeof RecentPosts;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBlogArticleExample__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBlogArticleExample__VariantsArgs;
    args?: PlasmicBlogArticleExample__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBlogArticleExample__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBlogArticleExample__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicBlogArticleExample__ArgProps,
      internalVariantPropNames: PlasmicBlogArticleExample__VariantProps
    });

    return PlasmicBlogArticleExample__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBlogArticleExample";
  } else {
    func.displayName = `PlasmicBlogArticleExample.${nodeName}`;
  }
  return func;
}

export const PlasmicBlogArticleExample = Object.assign(
  // Top-level PlasmicBlogArticleExample renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h2: makeNodeComponent("h2"),
    button: makeNodeComponent("button"),
    recentPosts: makeNodeComponent("recentPosts"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicBlogArticleExample
    internalVariantProps: PlasmicBlogArticleExample__VariantProps,
    internalArgProps: PlasmicBlogArticleExample__ArgProps
  }
);

export default PlasmicBlogArticleExample;
/* prettier-ignore-end */
