// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6BobAUw5T3TCqT8ypcszbG
// Component: JtJMO-voNniyDoB
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: uTDo8cXNPa_B1XC/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import Collapse from "antd/lib/collapse/Collapse"; // plasmic-import: F10gpQ1ZhXY/codeComponent
import CollapsePanel from "antd/lib/collapse/CollapsePanel"; // plasmic-import: yegZ392NLoV/codeComponent
import BlogPosts from "../../BlogPosts"; // plasmic-import: n3aIYan7r0SEV/component
import Footer from "../../Footer"; // plasmic-import: nmBaA0odzpiNWE/component

import { useScreenVariants as useScreenVariantsuXvTXvy0VuZNuyJ } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: UXvTXvy0VuZNuyJ/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_fountain_fm_css from "../fountain_fm/plasmic_fountain_fm.module.css"; // plasmic-import: q7mc6yKyK23FBh7x1aGwnG/projectcss
import projectcss from "./plasmic_copy_of_fountain_listen_to_earn.module.css"; // plasmic-import: 6BobAUw5T3TCqT8ypcszbG/projectcss
import sty from "./Plasmic_4FaQs.module.css"; // plasmic-import: JtJMO-voNniyDoB/css

import _26F2SvgIcon from "./icons/PlasmicIcon___26F2Svg"; // plasmic-import: JkAP-PmURACUjp/icon
import _1F3A7SvgIcon from "./icons/PlasmicIcon___1F3A7Svg"; // plasmic-import: RQU3t8-NCO4AUD/icon
import _1F399SvgIcon from "./icons/PlasmicIcon___1F399Svg"; // plasmic-import: njdyIRfFRGRhhk/icon
import _2699SvgIcon from "./icons/PlasmicIcon___2699Svg"; // plasmic-import: 4wtKFnAbIdPH3R/icon
import _26A1SvgIcon from "./icons/PlasmicIcon___26A1Svg"; // plasmic-import: t6MERJqqZBTbNG/icon

export type Plasmic_4FaQs__VariantMembers = {};

export type Plasmic_4FaQs__VariantsArgs = {};
type VariantPropType = keyof Plasmic_4FaQs__VariantsArgs;
export const Plasmic_4FaQs__VariantProps = new Array<VariantPropType>();

export type Plasmic_4FaQs__ArgsType = {};
type ArgPropType = keyof Plasmic_4FaQs__ArgsType;
export const Plasmic_4FaQs__ArgProps = new Array<ArgPropType>();

export type Plasmic_4FaQs__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  header?: p.Flex<"div">;
  reveal?: p.Flex<typeof Reveal>;
  aboutFountain?: p.Flex<typeof Collapse>;
  gettingStarted?: p.Flex<typeof Collapse>;
  podcasters?: p.Flex<typeof Collapse>;
  yourAccount?: p.Flex<typeof Collapse>;
  bitcoinLightning?: p.Flex<typeof Collapse>;
  blogPosts?: p.Flex<typeof BlogPosts>;
  footer?: p.Flex<typeof Footer>;
};

export interface Default_4FaQsProps {}

export const default_4FaQs__Args: Partial<Plasmic_4FaQs__ArgsType> = {};

function Plasmic_4FaQs__RenderFunc(props: {
  variants: Plasmic_4FaQs__VariantsArgs;
  args: Plasmic_4FaQs__ArgsType;
  overrides: Plasmic_4FaQs__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, default_4FaQs__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsuXvTXvy0VuZNuyJ()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"FAQ"}</title>
        <meta key="og:title" property="og:title" content={"FAQ"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <p.Stack
            as={"div"}
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            hasGap={true}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_fountain_fm_css.plasmic_tokens,
              sty.root
            )}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div
                data-plasmic-name={"header"}
                data-plasmic-override={overrides.header}
                className={classNames(projectcss.all, sty.header)}
              >
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wJWj2)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ubTAc)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__n4Omc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fMFk
                          )}
                        >
                          {"FAQs"}
                        </div>

                        <h1
                          className={classNames(
                            projectcss.all,
                            projectcss.h1,
                            projectcss.__wab_text,
                            sty.h1__pkSqy
                          )}
                        >
                          {"How can we help you?"}
                        </h1>
                      </p.Stack>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            ) : null}
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
            ) ? (
              <div className={classNames(projectcss.all, sty.freeBox___4XJcj)}>
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : true
                ) ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__wcMfp)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox___6YT4)}
                    >
                      <Reveal
                        data-plasmic-name={"reveal"}
                        data-plasmic-override={overrides.reveal}
                        className={classNames("__wab_instance", sty.reveal)}
                        triggerOnce={true}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bLifh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__judH8
                            )}
                          >
                            {"FAQs"}
                          </div>

                          <h1
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1__fjyEf
                            )}
                          >
                            {"How can we help you?"}
                          </h1>
                        </p.Stack>
                      </Reveal>
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__ll1BB)}>
                <Collapse
                  data-plasmic-name={"aboutFountain"}
                  data-plasmic-override={overrides.aboutFountain}
                  accordion={true}
                  bordered={false}
                  className={classNames("__wab_instance", sty.aboutFountain)}
                  defaultActiveKey={["string"]}
                  expandIconPosition={"left" as const}
                  ghost={true}
                >
                  <CollapsePanel
                    className={classNames(
                      "__wab_instance",
                      sty.antdCollapsePanel__z53MO
                    )}
                    forceRender={false}
                    header={
                      <React.Fragment>
                        <_26F2SvgIcon
                          className={classNames(projectcss.all, sty.svg__hkY2C)}
                          role={"img"}
                        />

                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__iXd4
                          )}
                        >
                          {"About Fountain"}
                        </h4>
                      </React.Fragment>
                    }
                    key={"string" as const}
                    showArrow={false}
                  >
                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__exwWq
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__mPIsK
                          )}
                          component={Link}
                          href={"/faqs/about" as const}
                          platform={"nextjs"}
                        >
                          {"What is Fountain?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__hon9B
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__xqHh
                          )}
                          component={Link}
                          href={"/faqs/bitcoin-lightning" as const}
                          platform={"nextjs"}
                        >
                          <React.Fragment>
                            <React.Fragment>{"What"}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#000000" }}
                            >
                              {" "}
                            </span>
                            <React.Fragment>
                              {"is The Bitcoin Lightning Network?"}
                            </React.Fragment>
                          </React.Fragment>
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__z8VDo
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__x4Moo
                          )}
                          component={Link}
                          href={"/faqs/value-for-value" as const}
                          platform={"nextjs"}
                        >
                          {"What is Value for Value?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>
                  </CollapsePanel>
                </Collapse>

                <Collapse
                  data-plasmic-name={"gettingStarted"}
                  data-plasmic-override={overrides.gettingStarted}
                  accordion={true}
                  bordered={false}
                  className={classNames("__wab_instance", sty.gettingStarted)}
                  defaultActiveKey={["string"]}
                  expandIconPosition={"left" as const}
                  ghost={true}
                >
                  <CollapsePanel
                    className={classNames(
                      "__wab_instance",
                      sty.antdCollapsePanel___0RZ9S
                    )}
                    forceRender={false}
                    header={
                      <React.Fragment>
                        <_1F3A7SvgIcon
                          className={classNames(projectcss.all, sty.svg__crWeF)}
                          role={"img"}
                        />

                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__iXd4
                          )}
                        >
                          {"Getting started"}
                        </h4>
                      </React.Fragment>
                    }
                    key={"string" as const}
                    showArrow={false}
                  >
                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__yl2Tv
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__ofMz6
                          )}
                          component={Link}
                          href={"/faqs/create-account" as const}
                          platform={"nextjs"}
                        >
                          {"How do I create an account on Fountain?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__hon9B
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__xqHh
                          )}
                          component={Link}
                          href={"/faqs/listener-earning" as const}
                          platform={"nextjs"}
                        >
                          {"How do I get paid to listen?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__z8VDo
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__x4Moo
                          )}
                          component={Link}
                          href={"/faqs/support-podcast" as const}
                          platform={"nextjs"}
                        >
                          {"How do I support a podcast?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__fgI9U
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__zfbdH
                          )}
                          component={Link}
                          href={"/faqs/lightning-podcasts" as const}
                          platform={"nextjs"}
                        >
                          {"Which podcasts can I support?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__thKg
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__jvIF
                          )}
                          component={Link}
                          href={"/faqs/import-podcasts" as const}
                          platform={"nextjs"}
                        >
                          {"How do I import my podcasts?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__oiUk1
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__jFvVq
                          )}
                          component={Link}
                          href={"/faqs/create-clip" as const}
                          platform={"nextjs"}
                        >
                          {"How do I create a clip?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__t0HrY
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___6UiIl
                          )}
                          component={Link}
                          href={"/faqs/create-playlist" as const}
                          platform={"nextjs"}
                        >
                          {"How do I create a playlist?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__eClYq
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__hcdGv
                          )}
                          component={Link}
                          href={"/faqs/chapters" as const}
                          platform={"nextjs"}
                        >
                          {"Does Fountain support chapters?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__gUw40
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___9Jlqi
                          )}
                          component={Link}
                          href={"/faqs/offline-listening" as const}
                          platform={"nextjs"}
                        >
                          {"Can I download podcasts to listen to offline?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__qHyhA
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__e3GBl
                          )}
                          component={Link}
                          href={"/faqs/create-playlist-3" as const}
                          platform={"nextjs"}
                        >
                          {"How do I manage my podcasts?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__fItcf
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__wrHBz
                          )}
                          component={Link}
                          href={"/faqs/discover-podcasts" as const}
                          platform={"nextjs"}
                        >
                          {"How do I find good podcasts to listen to?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>
                  </CollapsePanel>
                </Collapse>

                <Collapse
                  data-plasmic-name={"podcasters"}
                  data-plasmic-override={overrides.podcasters}
                  accordion={true}
                  bordered={false}
                  className={classNames("__wab_instance", sty.podcasters)}
                  defaultActiveKey={["string"]}
                  expandIconPosition={"left" as const}
                  ghost={true}
                >
                  <CollapsePanel
                    className={classNames(
                      "__wab_instance",
                      sty.antdCollapsePanel___8X3Ay
                    )}
                    forceRender={false}
                    header={
                      <React.Fragment>
                        <_1F399SvgIcon
                          className={classNames(projectcss.all, sty.svg__mnBsf)}
                          role={"img"}
                        />

                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__iXd4
                          )}
                        >
                          {"Podcasters"}
                        </h4>
                      </React.Fragment>
                    }
                    key={"string" as const}
                    showArrow={false}
                  >
                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6___3FroD
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___6ZZo
                          )}
                          component={Link}
                          href={"/faqs/podcaster-earn" as const}
                          platform={"nextjs"}
                        >
                          {"How do I earn from my podcast on Fountain?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__hon9B
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__xqHh
                          )}
                          component={Link}
                          href={"" as const}
                          platform={"nextjs"}
                        >
                          {"What is the Fountain Podcaster Wallet?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__z8VDo
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__x4Moo
                          )}
                          component={Link}
                          href={"/faqs/claim-podcast" as const}
                          platform={"nextjs"}
                        >
                          {"How do I claim my show in Fountain?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__zwncr
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___0HAUy
                          )}
                          component={Link}
                          href={"/faqs/switch-to-fountain" as const}
                          platform={"nextjs"}
                        >
                          {
                            "How do I switch to Fountain if I already have a value block?"
                          }
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__byxtN
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__aWtP6
                          )}
                          component={Link}
                          href={"/faqs/supporting-apps" as const}
                          platform={"nextjs"}
                        >
                          {
                            "Can I receive transactions from all podcast apps supporting Value for Value?"
                          }
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__kT8Hv
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__ulvC9
                          )}
                          component={Link}
                          href={"/faqs/managing-splits" as const}
                          platform={"nextjs"}
                        >
                          {"How do I split earnings with co-hosts and guests?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__fjYEi
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__yPaqk
                          )}
                          component={Link}
                          href={"/faqs/promote-podcast" as const}
                          platform={"nextjs"}
                        >
                          {"How do I promote my podcast on Fountain?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__i5Ydk
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__hMDyY
                          )}
                          component={Link}
                          href={"/faqs/running-my-own-node" as const}
                          platform={"nextjs"}
                        >
                          {
                            "Can I run my own node using the Fountain Podcaster Wallet?"
                          }
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__gaZbg
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__sj4Du
                          )}
                          component={Link}
                          href={"/faqs/export-transactions" as const}
                          platform={"nextjs"}
                        >
                          {
                            "Can I export historical transaction data for tax purposes?"
                          }
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__nO3Mn
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__sv7Sv
                          )}
                          component={Link}
                          href={"/faqs/podcaster-fees" as const}
                          platform={"nextjs"}
                        >
                          {"Is Fountain Podcaster Wallet free to use?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>
                  </CollapsePanel>
                </Collapse>

                <Collapse
                  data-plasmic-name={"yourAccount"}
                  data-plasmic-override={overrides.yourAccount}
                  accordion={true}
                  bordered={false}
                  className={classNames("__wab_instance", sty.yourAccount)}
                  defaultActiveKey={["string"]}
                  expandIconPosition={"left" as const}
                  ghost={true}
                >
                  <CollapsePanel
                    className={classNames(
                      "__wab_instance",
                      sty.antdCollapsePanel__eksl
                    )}
                    forceRender={false}
                    header={
                      <React.Fragment>
                        <_2699SvgIcon
                          className={classNames(projectcss.all, sty.svg__hJmFp)}
                          role={"img"}
                        />

                        <h4
                          className={classNames(
                            projectcss.all,
                            projectcss.h4,
                            projectcss.__wab_text,
                            sty.h4__iXd4
                          )}
                        >
                          {"Your account"}
                        </h4>
                      </React.Fragment>
                    }
                    key={"string" as const}
                    showArrow={false}
                  >
                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__a3WTx
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__zlhv1
                          )}
                          component={Link}
                          href={"/faqs/add-funds" as const}
                          platform={"nextjs"}
                        >
                          {"How do I deposit funds to my Wallet?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__hon9B
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__xqHh
                          )}
                          component={Link}
                          href={"/faqs/withdraw" as const}
                          platform={"nextjs"}
                        >
                          {"How do I withdraw funds from my Wallet?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__z8VDo
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__x4Moo
                          )}
                          component={Link}
                          href={"/faqs/lightning-address" as const}
                          platform={"nextjs"}
                        >
                          {"What can I do with my Fountain Lightning Address?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__cwNiU
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__ixuRa
                          )}
                          component={Link}
                          href={"/faqs/update-profile" as const}
                          platform={"nextjs"}
                        >
                          {"How do I edit my Fountain profile?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__gfX2Q
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__e9H6V
                          )}
                          component={Link}
                          href={"/faqs/notifications-settings" as const}
                          platform={"nextjs"}
                        >
                          {"How do I change my push notifications settings?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6___0UvS
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link__ayi8S
                          )}
                          component={Link}
                          href={"/faqs/fees" as const}
                          platform={"nextjs"}
                        >
                          {"Is Fountain free to use?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>

                    <h6
                      className={classNames(
                        projectcss.all,
                        projectcss.h6,
                        projectcss.__wab_text,
                        sty.h6__jlflr
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <p.PlasmicLink
                          className={classNames(
                            projectcss.all,
                            projectcss.a,
                            projectcss.__wab_text,
                            projectcss.plasmic_default__inline,
                            sty.link___93QWz
                          )}
                          component={Link}
                          href={"/faqs/fountain-premium" as const}
                          platform={"nextjs"}
                        >
                          {"What is Fountain Premium?"}
                        </p.PlasmicLink>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </h6>
                  </CollapsePanel>
                </Collapse>

                {true ? (
                  <Collapse
                    data-plasmic-name={"bitcoinLightning"}
                    data-plasmic-override={overrides.bitcoinLightning}
                    accordion={true}
                    bordered={false}
                    className={classNames(
                      "__wab_instance",
                      sty.bitcoinLightning
                    )}
                    defaultActiveKey={["string"]}
                    ghost={true}
                  >
                    <CollapsePanel
                      className={classNames(
                        "__wab_instance",
                        sty.antdCollapsePanel__iaoZh
                      )}
                      header={
                        <React.Fragment>
                          <_26A1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fZFk
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iXd4
                            )}
                          >
                            {"The Bitcoin Lightning Network"}
                          </div>
                        </React.Fragment>
                      }
                      key={"string" as const}
                      showArrow={false}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cxBjH
                        )}
                      >
                        {"Why Bitcoin?"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0DiNk
                        )}
                      >
                        {"What is a Bitcoin Lightning Wallet?"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z8VDo
                        )}
                      >
                        {"How can you get paid of Fount"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iMgs7
                        )}
                      >
                        {"How do I get Fountain?"}
                      </div>
                    </CollapsePanel>
                  </Collapse>
                ) : null}
              </div>
            ) : null}

            <BlogPosts
              data-plasmic-name={"blogPosts"}
              data-plasmic-override={overrides.blogPosts}
              className={classNames("__wab_instance", sty.blogPosts)}
            />

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </p.Stack>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "header",
    "reveal",
    "aboutFountain",
    "gettingStarted",
    "podcasters",
    "yourAccount",
    "bitcoinLightning",
    "blogPosts",
    "footer"
  ],
  navbar: ["navbar"],
  header: ["header"],
  reveal: ["reveal"],
  aboutFountain: ["aboutFountain"],
  gettingStarted: ["gettingStarted"],
  podcasters: ["podcasters"],
  yourAccount: ["yourAccount"],
  bitcoinLightning: ["bitcoinLightning"],
  blogPosts: ["blogPosts"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  header: "div";
  reveal: typeof Reveal;
  aboutFountain: typeof Collapse;
  gettingStarted: typeof Collapse;
  podcasters: typeof Collapse;
  yourAccount: typeof Collapse;
  bitcoinLightning: typeof Collapse;
  blogPosts: typeof BlogPosts;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_4FaQs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_4FaQs__VariantsArgs;
    args?: Plasmic_4FaQs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_4FaQs__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<Plasmic_4FaQs__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: Plasmic_4FaQs__ArgProps,
      internalVariantPropNames: Plasmic_4FaQs__VariantProps
    });

    return Plasmic_4FaQs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_4FaQs";
  } else {
    func.displayName = `Plasmic_4FaQs.${nodeName}`;
  }
  return func;
}

export const Plasmic_4FaQs = Object.assign(
  // Top-level Plasmic_4FaQs renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    header: makeNodeComponent("header"),
    reveal: makeNodeComponent("reveal"),
    aboutFountain: makeNodeComponent("aboutFountain"),
    gettingStarted: makeNodeComponent("gettingStarted"),
    podcasters: makeNodeComponent("podcasters"),
    yourAccount: makeNodeComponent("yourAccount"),
    bitcoinLightning: makeNodeComponent("bitcoinLightning"),
    blogPosts: makeNodeComponent("blogPosts"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for Plasmic_4FaQs
    internalVariantProps: Plasmic_4FaQs__VariantProps,
    internalArgProps: Plasmic_4FaQs__ArgProps
  }
);

export default Plasmic_4FaQs;
/* prettier-ignore-end */
